// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SguScheduleAPNs.DevicesManager.Repository;

#nullable disable

namespace SguScheduleAPNs.DevicesManager.Migrations
{
    [DbContext(typeof(DevicesManagerDbContext))]
    [Migration("20250907164325_FixedEntityConfig")]
    partial class FixedEntityConfig
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SguScheduleAPNs.DevicesManager.Entities.Device", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ApnsToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FavouriteGroupDepartment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FavouriteGroupNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Uuid");

                    b.ToTable("Devices");
                });
#pragma warning restore 612, 618
        }
    }
}
